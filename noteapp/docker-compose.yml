version: '3.8'

services:
  app:
    container_name: noteapp
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - DATABASE_NAME=${DATABASE_NAME:-noteapp}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - noteapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

  postgres:
    container_name: noteapp-postgres
    image: postgres:15-alpine
    ports:
      - "${POSTGRES_HOST_PORT}:${DATABASE_PORT}"
      # host:contenedor
    environment:
      - POSTGRES_USER=${DATABASE_USER:-postgres}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - POSTGRES_DB=${DATABASE_NAME:-noteapp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - noteapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
    name: noteapp-postgres-data

networks:
  noteapp-network:
    name: noteapp-network
    driver: bridge
