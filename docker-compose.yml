services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - authms
      - notems
      - userms
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-ms
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: notesdb
      POSTGRES_USER: notesuser
      POSTGRES_PASSWORD: notespass
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  authms:
    build: ./authms
    container_name: authms
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=notesuser
      - DB_PASS=notespass
      - DB_NAME=notesdb
    restart: unless-stopped

  notems:
    build: ./notems
    container_name: notems
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=notesuser
      - DB_PASS=notespass
      - DB_NAME=notesdb
    restart: unless-stopped

  userms:
    build: ./userms
    container_name: userms
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=notesuser
      - DB_PASS=notespass
      - DB_NAME=notesdb
    restart: unless-stopped

networks:
  default:
    driver: bridge