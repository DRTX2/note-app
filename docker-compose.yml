services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      authms:
        condition: service_healthy
      notems:
        condition: service_healthy
      userms:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-ms
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: notesdb
      POSTGRES_USER: notesuser
      POSTGRES_PASSWORD: notespass
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notesuser -d notesdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  authms:
    build: ./authms
    container_name: authms
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=notesuser
      - DB_PASS=notespass
      - DB_NAME=notesdb
      - JWT_SECRET=wS3cr3tK3yF0rPr0duction!
      - ALLOWED_ORIGINS=http://localhost:8080,http://localhost:3000
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  notems:
    build: ./notems
    container_name: notems
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=notesuser
      - DB_PASS=notespass
      - DB_NAME=notesdb
      - ALLOWED_ORIGINS=http://localhost:8080,http://localhost:3000
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  userms:
    build: ./userms
    container_name: userms
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=notesuser
      - DB_PASS=notespass
      - DB_NAME=notesdb
      - ALLOWED_ORIGINS=http://localhost:8080,http://localhost:3000
      - HTTP_PORT=3000
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  pgdata: 

